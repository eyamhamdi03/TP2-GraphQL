enum Role {
  USER
  ADMIN
}

type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  role: Role!
  Cvs: [Cv!]!
}

type Skill {
  id: ID!
  designation: String!
}

type Cv {
  id: ID!
  name: String!
  age: Int
  job: String!
  owner: User!
  skills: [Skill!]!
}
type Query {
  GetUsers: [User!]!
  GetUserById(id: ID!): User
  GetUserByEmail(email: String!): User
  GetUserByName(name: String!): [User!]!
  GetUsersByAge(age: Int!): [User!]!

  GetCvs: [Cv!]!
  GetCv(id: ID!): Cv
  GetCvByName(name: String!): [Cv!]!
  GetCvByJob(job: String!): [Cv!]!
  GetCvByOwnerId(ownerId: ID!): [Cv!]!
  GetCvsBySkill(skillId: ID!): [Cv!]!

  GetSkills: [Skill!]!
  GetSkill(id: ID!): Skill
  GetSkillsByName(name: String!): [Skill!]!
}
type Mutation {
  CreateCv(input: CreateCvInput!): Cv!
  UpdateCv(input: UpdateCvInput!): Cv!
  DeleteCv(id: ID!): Cv!
}
input CreateCvInput {
  name: String!
  age: Int!
  job: String!
  ownerId: Int!
  skillIds: [Int!]!
}

input UpdateCvInput {
  id: Int!
  name: String
  age: Int
  job: String
  ownerId: Int
  skillIds: [Int!]
}
